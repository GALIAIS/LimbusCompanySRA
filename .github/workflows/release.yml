name: Package Source Code

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Cache Python dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-python-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-python-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create a tar.gz archive excluding .github, .idea, and .git directories
        run: |
          echo "Creating tar.gz archive..."
          timestamp=$(date +'%Y%m%d%H%M%S')
          archive_name="source-code-${timestamp}.tar.gz"
          tar -czvf $archive_name \
            --exclude=".github" \
            --exclude=".idea" \
            --exclude=".git" \
            --exclude="*.pyc" \
            --warning=no-file-changed .
          echo "Created archive: $archive_name"

      - name: Upload tar.gz as build artifact
        uses: actions/upload-artifact@v2
        with:
          name: source-code-archive
          path: source-code-${timestamp}.tar.gz

      - name: Create a zip file for easy download
        run: |
          echo "Creating zip archive..."
          zip_name="source-code-${timestamp}.zip"
          zip -r $zip_name . -x "*.git*" "*.idea*" "*.github*" "*.pyc*"
          echo "Created zip: $zip_name"

      - name: Upload zip file as build artifact
        uses: actions/upload-artifact@v2
        with:
          name: source-code-zip
          path: source-code-${timestamp}.zip

      - name: Clean up
        run: |
          echo "Cleaning up generated files..."
          rm -f source-code-${timestamp}.tar.gz source-code-${timestamp}.zip
